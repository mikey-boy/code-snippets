alias refresh='lxpanelctl restart && openbox --restart'
alias ll='ls -l'
alias la='ls -A'
alias objdump='objdump -M intel'
alias android='/opt/android-studio/bin/studio.sh'
alias xclip="xclip -selection clipboard"
alias checksec='pwn checksec'
alias docker='sudo docker'
alias k='kubectl'
alias kn='kubectl config set-context --current --namespace '
alias kdbg='kubectl run --image busybox --attach debugger -it --rm'

###################
# Docker

alias dockershell="docker run --rm -i -t --entrypoint=/bin/bash"
alias dockershellsh="docker run --rm -i -t --entrypoint=/bin/sh"

function dockershellhere() {
    dirname=${PWD##*/}
    docker run --rm -it --entrypoint=/bin/bash -v `pwd`:/${dirname} -w /${dirname} "$@"
}

function dockershellshhere() {
    dirname=${PWD##*/}
    docker run --rm -it --entrypoint=/bin/sh -v `pwd`:/${dirname} -w /${dirname} "$@"
}


###################
# Other functions

function cheat {
        if [ "$1" = "-l" ]; then                    # list user cheatsheets
                ls ~/linux-things/cheatsheets/
        elif [ "$1" = "-li" ]; then                 # list image cheatsheets
                ls ~/linux-things/cheatsheets/imgs/
        elif [ "$1" = "-e" ]; then                  # create/edit cheatsheet
                vim ~/linux-things/cheatsheets/$2
        elif [ "$1" = "-i" ]; then                  # open image cheatsheet
                xdg-open ~/linux-things/cheatsheets/imgs/$2 
        else
                cat ~/linux-things/cheatsheets/$1
        fi
}

function tb-start {
    cur_status=$(systemctl show openvpn-client@TB-Canada.service | grep ExecMainPID | cut -d'=' -f2)
    if [ $cur_status -ne 0 ]; then
        echo "It seems that you are already connected to TunnelBear VPN. Exiting now..."
        return 0
    fi

    ip=$(curl --silent ifconfig.me)
    echo "Current IP address: $ip"
    
    sudo systemctl start openvpn-client@TB-Canada
    sleep 4 
    
    ip_new=$(curl --silent ifconfig.me)
    echo "Updated IP address: $ip_new"

    if [ "$ip" = "$ip_new" ]; then
        echo "Check that your IP actually changed using 'curl ifconfig.me'"
    fi
}

function tb-stop {
    cur_status=$(systemctl show openvpn-client@TB-Canada.service | grep ExecMainPID | cut -d'=' -f2)
    if [ $cur_status -eq 0 ]; then
        echo "You don't seem to be connected to TunnelBear VPN. Exiting now..."
        return 0
    fi

    sudo systemctl stop openvpn-client@TB-Canada
}

function tb-status {
    systemctl --no-pager status openvpn-client@TB-Canada
}
